{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/App.js\";\nimport React from \"react\";\nimport Shop from \"./shop/Shop\";\nimport GameContainer from \"./GameContainer\";\nimport Authentication from \"./Authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateShopData = (title, newData) => {\n      let new_dict = this.state.shopData;\n      for (var key in new_dict) {\n        if (key === title) new_dict[key] = newData;\n      }\n      this.setState({\n        shopData: new_dict\n      }); // set state to new object with updated list\n    };\n    this.state = {\n      totalWatts: 0,\n      dps: 0,\n      // miningPower is the players harvest amount per hit\n      miningPower: 1,\n      shopData: {\n        \"Fan\": {\n          cost: 5,\n          dps: 1,\n          numActive: 0\n        },\n        \"Leaf Blower\": {\n          cost: 50,\n          dps: 5,\n          numActive: 0\n        },\n        \"Rocket\": {\n          cost: 200,\n          dps: 20,\n          numActive: 0\n        },\n        //, \"Ex 4\": {cost: 1000, dps: 100, numActive: 0},\n        \"blowingPower\": {\n          cost: 10,\n          numActive: 0\n        },\n        \"wps\": {\n          cost: 20,\n          numActive: 0\n        }\n      },\n      isLoggedIn: false,\n      shopPanelActive: true\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\",\n      children: [!this.state.isLoggedIn && /*#__PURE__*/_jsxDEV(Authentication, {\n        getGameInfo: this.getGameInfo.bind(this),\n        setGameInfo: info => this.setGameInfo(info),\n        setLoggedIn: () => {\n          this.setLoggedIn();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(GameContainer, {\n        totalWatts: this.state.totalWatts,\n        updateWatts: wattsGained => this.updateWatts(wattsGained),\n        miningPower: this.state.miningPower,\n        dps: this.state.dps,\n        shopData: this.state.shopData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this), this.state.shopPanelActive && /*#__PURE__*/_jsxDEV(Shop, {\n        incrementDps: increment => this.incrementDps(increment),\n        getTotalWatts: () => this.getTotalWatts(),\n        updateTotalWatts: cost => this.updateWatts(cost),\n        getDps: () => this.state.dps,\n        multMiningPower: multFactor => this.multMiningPower(multFactor),\n        updateShopData: (title, newData) => this.updateShopData(title, newData),\n        shopData: this.state.shopData,\n        setShopPanelState: stateBool => this.setShopPanelState(stateBool)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n  incrementDps(increment) {\n    this.setState({\n      dps: this.state.dps + increment\n    });\n  }\n  updateWatts(wattsToUpdate) {\n    //console.log(typeof wattsToUpdate)\n    this.setState({\n      totalWatts: +(this.state.totalWatts + wattsToUpdate).toFixed(2)\n    });\n  }\n  multMiningPower(multFactor) {\n    this.setState({\n      miningPower: this.state.miningPower * multFactor\n    });\n  }\n  getTotalWatts() {\n    return this.state.totalWatts;\n  }\n  setLoggedIn() {\n    this.setState({\n      isLoggedIn: true\n    });\n  }\n  setShopPanelState(stateBool) {\n    this.setState({\n      shopPanelActive: stateBool\n    });\n  }\n  getGameInfo() {\n    console.log(\"getting info\", this.state.totalWatts);\n    return {\n      totalWatts: this.state.totalWatts,\n      dps: this.state.dps,\n      miningPower: this.state.miningPower,\n      shopData: this.state.shopData\n    };\n  }\n  setGameInfo(_ref) {\n    let {\n      totalWatts,\n      dps,\n      miningPower,\n      shopData\n    } = _ref;\n    console.log(totalWatts, dps, miningPower, shopData);\n    this.setState({\n      totalWatts: totalWatts,\n      dps: dps,\n      miningPower: miningPower,\n      shopData: shopData\n    });\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Shop","GameContainer","Authentication","App","Component","constructor","props","updateShopData","title","newData","new_dict","state","shopData","key","setState","totalWatts","dps","miningPower","cost","numActive","isLoggedIn","shopPanelActive","render","getGameInfo","bind","info","setGameInfo","setLoggedIn","wattsGained","updateWatts","increment","incrementDps","getTotalWatts","multFactor","multMiningPower","stateBool","setShopPanelState","wattsToUpdate","toFixed","console","log"],"sources":["/Users/faisal/new-clicker-game/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Shop from \"./shop/Shop\"\nimport GameContainer from \"./GameContainer\";\nimport Authentication from \"./Authentication\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalWatts: 0,\n      dps: 0,\n      // miningPower is the players harvest amount per hit\n      miningPower: 1,\n      shopData: {\"Fan\": {cost: 5, dps: 1, numActive: 0}, \"Leaf Blower\": {cost: 50 , dps: 5, numActive: 0},\n       \"Rocket\": { cost: 200 ,dps: 20, numActive: 0 },\n      //, \"Ex 4\": {cost: 1000, dps: 100, numActive: 0},\n      \"blowingPower\": {cost: 10, numActive: 0}, \"wps\":  {cost: 20, numActive: 0}},\n      isLoggedIn: false,\n      shopPanelActive: true\n    };\n  }\n  render() {\n    return (\n      <div id=\"body\">\n        {/* Authentication component only renders if the user is not logged in */}\n        {!this.state.isLoggedIn &&  <Authentication\n          getGameInfo={this.getGameInfo.bind(this)}\n          setGameInfo={(info) => this.setGameInfo(info)}\n          setLoggedIn={() => {this.setLoggedIn()}}\n        />}\n\n         <GameContainer\n            totalWatts={this.state.totalWatts}\n            updateWatts={(wattsGained) => this.updateWatts(wattsGained)}\n            miningPower={this.state.miningPower}\n            dps={this.state.dps}\n            shopData={this.state.shopData}\n          />\n       \n       {this.state.shopPanelActive &&  <Shop\n          incrementDps = {(increment) => this.incrementDps(increment)}\n          getTotalWatts = {() => this.getTotalWatts()}\n          updateTotalWatts = {(cost) => this.updateWatts(cost)}\n          getDps = {() => this.state.dps}\n          multMiningPower= {(multFactor) => this.multMiningPower(multFactor)}\n          updateShopData = {(title,newData) => this.updateShopData(title,newData)}\n          shopData = {this.state.shopData}\n          setShopPanelState = {(stateBool) => this.setShopPanelState(stateBool)}\n        />}\n       \n      </div>\n    );\n  }\n\n  updateShopData = (title, newData) => {\n     let new_dict = this.state.shopData\n      for(var key in new_dict) {\n        if(key===title) new_dict[key] = newData\n      }\n      this.setState({shopData: new_dict}); // set state to new object with updated list\n   }\n\n\n  incrementDps(increment) {\n    this.setState({\n      dps: this.state.dps + increment\n    });\n  }\n\n  updateWatts(wattsToUpdate) {\n    //console.log(typeof wattsToUpdate)\n    this.setState({\n      totalWatts: +(this.state.totalWatts + wattsToUpdate).toFixed(2)\n    })\n  }\n\n  multMiningPower(multFactor) {\n    this.setState({\n      miningPower: this.state.miningPower * multFactor\n    })\n  }\n  getTotalWatts() {\n    return this.state.totalWatts\n  }\n\n  setLoggedIn() {\n    this.setState({\n      isLoggedIn: true\n    })\n  }\n\n  setShopPanelState(stateBool) {\n    this.setState({\n      shopPanelActive: stateBool\n    })\n  }\n \n  getGameInfo() {\n    console.log(\"getting info\", this.state.totalWatts)\n    return {\n      totalWatts: this.state.totalWatts,\n      dps: this.state.dps,\n      miningPower: this.state.miningPower,\n      shopData: this.state.shopData\n    };\n  }\n\n  setGameInfo({totalWatts,dps,miningPower,shopData}) {\n    console.log(totalWatts,dps,miningPower,shopData)\n    this.setState({\n      totalWatts: totalWatts,\n      dps: dps,\n      miningPower: miningPower,\n      shopData: shopData\n    });\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}