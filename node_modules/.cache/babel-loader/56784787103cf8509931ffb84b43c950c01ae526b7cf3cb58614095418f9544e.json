{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/WindMill.js\";\nimport React from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WindMill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.harvestResource = harvestAmount => {\n      if (!this.state.canHarvest) return;\n      // If no harvest amount is passed in, that means it is an auto dps harvest \n      // so the harvest amount is set to the dps\n      harvestAmount ??= this.props.dps;\n      this.updateWatts(harvestAmount);\n      this.setState({\n        currentResources: this.state.currentResources - harvestAmount\n      }, () => {\n        if (this.state.currentResources < 1) {\n          this.handleResourceDepleted();\n        }\n      });\n    };\n    this.updateWatts = this.props.updateWatts;\n    this.resourcesMined = this.props.resourcesMined;\n    this.interval = undefined;\n    this.state = {\n      totalResources: 10,\n      currentResources: 10,\n      canHarvest: true,\n      shouldReset: false\n    };\n  }\n  handleResourceDepleted() {\n    this.setState({\n      currentResources: 0,\n      canHarvest: false,\n      totalResources: this.state.totalResources * 1.5\n    });\n    setTimeout(() => {\n      this.setState({\n        shouldReset: true\n      });\n    }, 500);\n  }\n  componentDidUpdate() {\n    if (this.state.shouldReset) {\n      this.setState({\n        currentResources: this.state.totalResources,\n        canHarvest: true,\n        shouldReset: false\n      });\n    }\n  }\n  rotateFan(fan, speed) {\n    this.degree = 0;\n    fan.setAttribute({\n      transform: 'rotate(' + this.degree + 'deg)'\n    });\n    this.timer = setTimeout(function () {\n      ++this.degree;\n      this.rotateFan();\n    }, speed); //lower this to increase speed\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.harvestResource();\n    }, 1000);\n    //this.timer = this.rotateFan(document.getElementsByClassName('wind-mill-fan')[0],5)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.timer);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-items\",\n        id: \"wind-mill-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"wind-mill\",\n          src: process.env.PUBLIC_URL + \"/windmill.png\",\n          alt: \"broken img\",\n          style: {\n            width: `${15}rem`\n          },\n          onClick: () => {\n            this.harvestResource(this.props.miningPower);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"wind-mill-fan fan-rotate\",\n          src: process.env.PUBLIC_URL + \"/windmill-fan.png\",\n          alt: \"broken img\",\n          style: {\n            width: `${15}rem`\n          },\n          onClick: () => {\n            this.harvestResource(this.props.miningPower);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (this.state.currentResources / this.state.totalResources * 100).toFixed(0) + \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default WindMill;","map":{"version":3,"names":["React","WindMill","Component","constructor","props","harvestResource","harvestAmount","state","canHarvest","dps","updateWatts","setState","currentResources","handleResourceDepleted","resourcesMined","interval","undefined","totalResources","shouldReset","setTimeout","componentDidUpdate","rotateFan","fan","speed","degree","setAttribute","transform","timer","componentDidMount","setInterval","componentWillUnmount","clearInterval","render","process","env","PUBLIC_URL","width","miningPower","toFixed"],"sources":["/Users/faisal/new-clicker-game/src/WindMill.js"],"sourcesContent":["import React from \"react\";\n\nclass WindMill extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.updateWatts = this.props.updateWatts\n    this.resourcesMined = this.props.resourcesMined\n    this.interval=undefined;\n    this.state = {\n      totalResources: 10,\n      currentResources: 10,\n      canHarvest: true,\n      shouldReset: false,\n    };\n  }\n\n  handleResourceDepleted() {\n    this.setState({\n      currentResources: 0,\n      canHarvest: false,\n      totalResources: this.state.totalResources * 1.5,\n    });\n    setTimeout(() => {\n      this.setState({ shouldReset: true });\n    }, 500);\n  }\n\n  harvestResource = (harvestAmount) => {\n    if (!this.state.canHarvest) return;\n    // If no harvest amount is passed in, that means it is an auto dps harvest \n    // so the harvest amount is set to the dps\n    harvestAmount ??= this.props.dps\n    this.updateWatts(harvestAmount);\n    this.setState({\n       currentResources: this.state.currentResources - harvestAmount,\n    }, () => {\n      if (this.state.currentResources < 1) {\n        this.handleResourceDepleted();\n      }\n    })\n  };\n\n  componentDidUpdate() {\n    if (this.state.shouldReset) {\n      this.setState({\n        currentResources: this.state.totalResources,\n        canHarvest: true,\n        shouldReset: false,\n      });\n    }\n  }\n\n\n  rotateFan(fan,speed) {  \n    this.degree = 0;\n      fan.setAttribute({ transform: 'rotate(' + this.degree + 'deg)'});\n      this.timer = setTimeout(function() {\n          ++this.degree;\n          this.rotateFan();\n      },speed); //lower this to increase speed\n  }\n\n  componentDidMount() {\n     this.interval = setInterval(() => {\n      this.harvestResource();\n    }, 1000);\n    //this.timer = this.rotateFan(document.getElementsByClassName('wind-mill-fan')[0],5)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.timer)\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"center-items\" id=\"wind-mill-container\">\n          <img\n            className=\"wind-mill\"\n            src={\n              process.env.PUBLIC_URL +\n             \"/windmill.png\"\n            }\n            alt=\"broken img\"\n            style={{\n              width: `${15}rem`,\n            }}\n            onClick={() => {\n              this.harvestResource(this.props.miningPower);\n            }}\n          ></img>\n             <img\n            className=\"wind-mill-fan fan-rotate\"\n            src={\n              process.env.PUBLIC_URL +\n             \"/windmill-fan.png\"\n            }\n            alt=\"broken img\"\n            style={{\n              width: `${15}rem`,\n            }}\n            onClick={() => {\n              this.harvestResource(this.props.miningPower);\n            }}\n          ></img>\n          <h1>\n            {(\n              (this.state.currentResources / this.state.totalResources) *\n              100\n            ).toFixed(0) + \"%\"}\n          </h1>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default WindMill;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}