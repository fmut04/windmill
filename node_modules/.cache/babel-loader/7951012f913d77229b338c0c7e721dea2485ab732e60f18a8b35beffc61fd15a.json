{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/App.js\";\nimport React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Shop from \"./shop/Shop\";\nimport Authentication from \"./Authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMoney: 0,\n      dps: 0,\n      // hph is the players harvest amount per hit\n      hph: 1,\n      helpersData: {\n        \"Dog Miner\": [5, 0],\n        \"Super Dog\": [50, 0],\n        \"Mining Drill\": [200, 0],\n        \"Example\": [1000, 0]\n      },\n      upgradesData: {\n        \"hph\": [200, 0],\n        \"dps\": [100, 0]\n      }\n    };\n    console.log(helpersData);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Authentication, {\n        getGameInfo: this.getGameInfo(),\n        setGameInfo: info => this.setGameInfo(info)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-div\",\n        id: \"center-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Money: \", this.state.totalMoney]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"dps\",\n          children: [\"DPS: \", this.state.dps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wallet, {\n          updateMoney: moneyGained => this.updateMoney(moneyGained),\n          hph: this.state.hph,\n          dps: this.state.dps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Shop, {\n        incrementDps: increment => this.incrementDps(increment),\n        getTotalMoney: () => this.getTotalMoney(),\n        updateTotalMoney: cost => this.updateMoney(cost),\n        getDps: () => this.state.dps,\n        multHph: multFactor => this.multHph(multFactor)\n        // helpersData = {helpersData}\n        // upgradesData = {upgradesData}\n        // updateHelpersData = {(title,newVal,idx) => this.updateHelpersData(title,newVal,idx)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  // updateHelpersData(title,newVal,idx) {\n\n  //   this.setState(prevState => ({\n  //     helpersData: {\n  //       ...prevState.helpersData,\n\n  //     }\n  // }))\n\n  incrementDps(increment) {\n    this.setState({\n      dps: this.state.dps + increment\n    });\n  }\n  updateMoney(moneyToUpdate) {\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyToUpdate\n    });\n  }\n  multHph(multFactor) {\n    this.setState({\n      hph: this.state.hph * multFactor\n    });\n  }\n  getTotalMoney() {\n    return this.state.totalMoney;\n  }\n  handleWalletClick(clickStrength, resourcesLeft) {\n    var moneyGained = clickStrength;\n    // Set a state \"fullyMined\" to true that gets passed to the wallet so when fullyMined is true the wallet resets its variables\n    // and then in this block, call a function like \"resetResource\" to reset it and get prepared to implement chest drops when the \n    // resource is fully mined.\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyGained\n    });\n  }\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      dps: this.state.dps,\n      hph: this.state.hph\n    };\n  }\n  setGameInfo(info) {\n    console.log(info);\n    this.setState({\n      totalMoney: info.totalMoney,\n      dps: info.dps,\n      hph: info.hph\n    });\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Wallet","Shop","Authentication","App","Component","constructor","props","state","totalMoney","dps","hph","helpersData","upgradesData","console","log","render","getGameInfo","info","setGameInfo","moneyGained","updateMoney","increment","incrementDps","getTotalMoney","cost","multFactor","multHph","setState","moneyToUpdate","handleWalletClick","clickStrength","resourcesLeft"],"sources":["/Users/faisal/new-clicker-game/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Shop from \"./shop/Shop\"\nimport Authentication from \"./Authentication\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMoney: 0,\n      dps: 0,\n      // hph is the players harvest amount per hit\n      hph: 1,\n      helpersData: {\"Dog Miner\": [5,0], \"Super Dog\": [50,0], \"Mining Drill\":[200,0], \"Example\": [1000,0]},\n      upgradesData: {\"hph\": [200,0], \"dps\": [100,0]}\n     \n    };\n    console.log(helpersData)\n  }\n  render() {\n    return (\n      <div id=\"body\">\n         <Authentication\n          getGameInfo={this.getGameInfo()}\n          setGameInfo={(info) => this.setGameInfo(info)}\n        />\n        <div className=\"grid-div\" id=\"center-div\">\n          <h1>Money: {this.state.totalMoney}</h1>\n          <h1 id=\"dps\">DPS: {this.state.dps}</h1>\n          <Wallet\n            updateMoney={(moneyGained) => this.updateMoney(moneyGained)}\n            hph={this.state.hph}\n            dps={this.state.dps}\n          />\n        </div>\n        <Shop\n          incrementDps = {(increment) => this.incrementDps(increment)}\n          getTotalMoney = {() => this.getTotalMoney()}\n          updateTotalMoney = {(cost) => this.updateMoney(cost)}\n          getDps = {() => this.state.dps}\n          multHph= {(multFactor) => this.multHph(multFactor)}\n          // helpersData = {helpersData}\n          // upgradesData = {upgradesData}\n          // updateHelpersData = {(title,newVal,idx) => this.updateHelpersData(title,newVal,idx)}\n        />\n       \n      </div>\n    );\n  }\n\n\n  // updateHelpersData(title,newVal,idx) {\n\n\n  //   this.setState(prevState => ({\n  //     helpersData: {\n  //       ...prevState.helpersData,\n\n  //     }\n  // }))\n\n\n  incrementDps(increment) {\n    this.setState({\n      dps: this.state.dps + increment\n    });\n  }\n\n  updateMoney(moneyToUpdate) {\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyToUpdate\n    })\n  }\n\n  multHph(multFactor) {\n    this.setState({\n      hph: this.state.hph * multFactor\n    })\n  }\n  getTotalMoney() {\n    return this.state.totalMoney\n  }\n  handleWalletClick(clickStrength,resourcesLeft) {\n    var moneyGained = clickStrength\n      // Set a state \"fullyMined\" to true that gets passed to the wallet so when fullyMined is true the wallet resets its variables\n      // and then in this block, call a function like \"resetResource\" to reset it and get prepared to implement chest drops when the \n      // resource is fully mined.\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyGained \n    });\n  }\n\n\n\n\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      dps: this.state.dps,\n      hph: this.state.hph\n    };\n  }\n\n  setGameInfo(info) {\n    console.log(info)\n    this.setState({\n      totalMoney: info.totalMoney,\n      dps: info.dps,\n      hph: info.hph,\n    });\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}