{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/Wallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Wallet(_ref) {\n  _s();\n  let {\n    updateMoney,\n    resourcesMined,\n    harvestingPower,\n    dps\n  } = _ref;\n  const [totalResources, setTotalResources] = useState((1 + resourcesMined) * 10);\n  const [currentResources, setCurrentResources] = useState(totalResources);\n  let currentResourcesRef = useRef(currentResources);\n  const [canHarvest, setCanHarvest] = useState(true);\n  const [shouldReset, setShouldReset] = useState(false);\n  function handleResourceDepleted() {\n    setCurrentResources(0);\n    setCanHarvest(false);\n    setTotalResources(totalResources * 1.1);\n    setTimeout(() => {\n      setShouldReset(true);\n    }, 500);\n  }\n  function getDps() {\n    return dps;\n  }\n  //  useEffect(() => {\n  //    currentResourcesRef.current = currentResources\n  //  }, [currentResources])\n\n  function harvestResource(clickStrength) {\n    console.log(dps);\n    if (!canHarvest) return;\n    let harvestAmount = clickStrength ? clickStrength : getDps();\n    //console.log(harvestAmount)\n    updateMoney(harvestAmount);\n    setCurrentResources(c => c - harvestAmount);\n    currentResourcesRef.current = currentResourcs - harvestAmount;\n    if (currentResourcesRef.current <= 1) {\n      handleResourceDepleted();\n    }\n  }\n\n  // Resets the resource if shouldReset is made True\n  useEffect(() => {\n    if (shouldReset) {\n      setCurrentResources(totalResources);\n      setCanHarvest(true);\n      setShouldReset(false);\n    }\n  }, [shouldReset, totalResources]);\n\n  //Harvests the resource based on dps on an interval\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      harvestResource();\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n    // eslint-disable-next-line \n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerItems\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"wallet\",\n        src: process.env.PUBLIC_URL + currentResources > 0 ? \"/wallet/Wallet-0.png\" : \"/wallet/Wallet-1.png\",\n        alt: \"broken img\",\n        style: {\n          width: `${10 * (currentResources / totalResources) + 10}rem`\n        }\n        //style={{width: `${20*.3}px`} , height: `${currentResources/totalResources*100}%`}}\n        ,\n        onClick: () => {\n          harvestResource(harvestingPower);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: (currentResources / totalResources * 100).toFixed(0) + \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n  function harvestDps() {\n    harvestResource();\n  }\n}\n_s(Wallet, \"4ZefITlL4HrSbJEONRTkcDRWUqw=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Wallet","updateMoney","resourcesMined","harvestingPower","dps","totalResources","setTotalResources","currentResources","setCurrentResources","currentResourcesRef","canHarvest","setCanHarvest","shouldReset","setShouldReset","handleResourceDepleted","setTimeout","getDps","harvestResource","clickStrength","console","log","harvestAmount","c","current","currentResourcs","interval","setInterval","clearInterval","process","env","PUBLIC_URL","width","toFixed","harvestDps"],"sources":["/Users/faisal/new-clicker-game/src/Wallet.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\n\nfunction Wallet({ updateMoney, resourcesMined, harvestingPower, dps }) {\n  const [totalResources,setTotalResources] = useState((1+resourcesMined)*10);\n  const [currentResources,setCurrentResources] = useState(totalResources);\n  let currentResourcesRef = useRef(currentResources)\n  const [canHarvest,setCanHarvest] = useState(true)\n  const [shouldReset,setShouldReset] = useState(false)\n\n  function handleResourceDepleted() {\n    setCurrentResources(0)\n    setCanHarvest(false)\n    setTotalResources(totalResources*1.1)\n    setTimeout(() => {\n     setShouldReset(true)\n },500)}\n\nfunction getDps() {\n  return dps\n}\n//  useEffect(() => {\n//    currentResourcesRef.current = currentResources\n//  }, [currentResources])\n \n \n  function harvestResource(clickStrength) {\n      console.log(dps)\n      if(!canHarvest) return\n      let harvestAmount = clickStrength ? clickStrength : getDps()\n      //console.log(harvestAmount)\n    updateMoney(harvestAmount)\n    setCurrentResources(c => c - harvestAmount)\n\n    currentResourcesRef.current = currentResourcs - harvestAmount;\n    if(currentResourcesRef.current<=1){\n    handleResourceDepleted()\n    }}\n\n  \n  // Resets the resource if shouldReset is made True\n  useEffect(() => {\n    if(shouldReset) {\n    setCurrentResources(totalResources)\n    setCanHarvest(true)\n    setShouldReset(false)\n    }\n  }, [shouldReset,totalResources])\n \n  //Harvests the resource based on dps on an interval\n\n  useEffect(() => {\n      const interval = setInterval(() => {\n      harvestResource()\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    }\n  // eslint-disable-next-line \n  },[])\n  \n  return (\n    <>\n    <div className=\"centerItems\"> \n    <img\n        id=\"wallet\"\n        src={process.env.PUBLIC_URL + currentResources>0 ? \"/wallet/Wallet-0.png\" : \"/wallet/Wallet-1.png\"}\n        alt=\"broken img\"\n        style={{width: `${10*(currentResources/totalResources)+10}rem`}}\n         //style={{width: `${20*.3}px`} , height: `${currentResources/totalResources*100}%`}}\n        onClick={() => {\n          harvestResource(harvestingPower)\n        }}\n      ></img>\n      <h1>\n        {(currentResources/totalResources*100).toFixed(0) + \"%\"}\n      </h1>\n    </div>\n    \n    </>\n  );\n\n\n\n   \n  \n  \n  function harvestDps() {\n    harvestResource()\n  }\n  \n}\n\n\n\n\n\n\n\nexport default Wallet;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}