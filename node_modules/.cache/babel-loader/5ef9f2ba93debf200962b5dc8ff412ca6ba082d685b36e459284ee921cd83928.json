{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/App.js\";\nimport React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Shop from \"./shop/Shop\";\nimport Authentication from \"./Authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMoney: 0,\n      dps: 0,\n      // hph is the players harvest amount per hit\n      hph: 1\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Authentication, {\n        getGameInfo: this.getGameInfo(),\n        setGameInfo: info => this.setGameInfo(info)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-div\",\n        id: \"center-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Money: \", this.state.totalMoney]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"dps\",\n          children: [\"DPS: \", this.state.dps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wallet, {\n          incrementMoney: moneyGained => this.incrementMoney(moneyGained),\n          resourcesMined: 0,\n          hph: 1,\n          dps: this.state.dps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Shop, {\n        incrementDps: increment => this.incrementDps(increment),\n        getTotalMoney: () => this.getTotalMoney(),\n        updateTotalMoney: cost => this.updateMoney(cost),\n        getDps: () => this.state.dps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n  incrementDps(increment) {\n    this.setState({\n      dps: this.state.dps + increment\n    });\n  }\n  incrementMoney(increment) {\n    this.setState({\n      totalMoney: this.state.totalMoney + increment\n    });\n  }\n  getTotalMoney() {\n    return this.state.totalMoney;\n  }\n  handleWalletClick(clickStrength, resourcesLeft) {\n    var moneyGained = clickStrength;\n    // Set a state \"fullyMined\" to true that gets passed to the wallet so when fullyMined is true the wallet resets its variables\n    // and then in this block, call a function like \"resetResource\" to reset it and get prepared to implement chest drops when the \n    // resource is fully mined.\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyGained\n    });\n  }\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      clickSpeed: this.state.clickSpeed,\n      luck: this.state.luck,\n      moneyCount: document.getElementsByClassName(\"bill\").length\n    };\n  }\n  setGameInfo(info) {\n    console.log(info);\n    this.setState({\n      totalMoney: info.totalMoney,\n      clickSpeed: info.clickSpeed,\n      luck: info.luck,\n      moneyCount: info.moneyCount + 1\n    });\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Wallet","Shop","Authentication","App","Component","constructor","props","state","totalMoney","dps","hph","render","getGameInfo","info","setGameInfo","moneyGained","incrementMoney","increment","incrementDps","getTotalMoney","cost","updateMoney","setState","handleWalletClick","clickStrength","resourcesLeft","clickSpeed","luck","moneyCount","document","getElementsByClassName","length","console","log"],"sources":["/Users/faisal/new-clicker-game/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Shop from \"./shop/Shop\"\nimport Authentication from \"./Authentication\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMoney: 0,\n      dps: 0,\n      // hph is the players harvest amount per hit\n      hph: 1\n    };\n  }\n  render() {\n    return (\n      <div id=\"body\">\n         <Authentication\n          getGameInfo={this.getGameInfo()}\n          setGameInfo={(info) => this.setGameInfo(info)}\n        />\n        <div className=\"grid-div\" id=\"center-div\">\n          <h1>Money: {this.state.totalMoney}</h1>\n          <h1 id=\"dps\">DPS: {this.state.dps}</h1>\n          <Wallet\n            incrementMoney={(moneyGained) => this.incrementMoney(moneyGained)}\n            resourcesMined={0}\n            hph={1}\n            dps={this.state.dps}\n          />\n        </div>\n        <Shop\n          incrementDps = {(increment) => this.incrementDps(increment)}\n          getTotalMoney = {() => this.getTotalMoney()}\n          updateTotalMoney = {(cost) => this.updateMoney(cost)}\n          getDps = {() => this.state.dps}\n        />\n       \n      </div>\n    );\n  }\n\n  incrementDps(increment) {\n    this.setState({\n      dps: this.state.dps + increment\n    });\n  }\n\n  incrementMoney(increment) {\n    this.setState({\n      totalMoney: this.state.totalMoney + increment\n    })\n  }\n\n  getTotalMoney() {\n    return this.state.totalMoney\n  }\n  handleWalletClick(clickStrength,resourcesLeft) {\n    var moneyGained = clickStrength\n      // Set a state \"fullyMined\" to true that gets passed to the wallet so when fullyMined is true the wallet resets its variables\n      // and then in this block, call a function like \"resetResource\" to reset it and get prepared to implement chest drops when the \n      // resource is fully mined.\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyGained \n    });\n  }\n\n\n\n\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      clickSpeed: this.state.clickSpeed,\n      luck: this.state.luck,\n      moneyCount: document.getElementsByClassName(\"bill\").length,\n    };\n  }\n\n  setGameInfo(info) {\n    console.log(info)\n    this.setState({\n      totalMoney: info.totalMoney,\n      clickSpeed: info.clickSpeed,\n      luck: info.luck,\n      moneyCount: info.moneyCount + 1,\n    });\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}