{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/WindMill.js\";\nimport React from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WindMill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.harvestResource = harvestAmount => {\n      if (!this.state.canHarvest) return;\n      // If no harvest amount is passed in, that means it is an auto dps harvest \n      // so the harvest amount is set to the dps\n      harvestAmount ??= this.props.dps;\n      this.updateWatts(harvestAmount);\n      this.setState({\n        currentResources: this.state.currentResources - harvestAmount,\n        velocity: this.acceleratedVelocity()\n      }, () => {\n        if (this.state.currentResources < 1) {\n          this.handleResourceDepleted();\n        }\n      });\n    };\n    this.getVelocity = () => {\n      //console.log(this.state.velocity)\n      return this.state.velocity;\n    };\n    this.updateWatts = this.props.updateWatts;\n    this.resourcesMined = this.props.resourcesMined;\n    this.interval = undefined;\n    this.state = {\n      totalResources: 10,\n      currentResources: 10,\n      canHarvest: true,\n      shouldReset: false,\n      velocity: 0\n    };\n  }\n  handleResourceDepleted() {\n    this.setState({\n      currentResources: 0,\n      canHarvest: false,\n      totalResources: this.state.totalResources * 1.5\n    });\n    setTimeout(() => {\n      this.setState({\n        shouldReset: true\n      });\n    }, 500);\n  }\n  acceleratedVelocity() {\n    let acceleration = 10;\n    return this.state.velocity + acceleration;\n  }\n  componentDidUpdate() {\n    if (this.state.shouldReset) {\n      this.setState({\n        currentResources: this.state.totalResources,\n        canHarvest: true,\n        shouldReset: false\n      });\n    }\n  }\n  rotateFan(fan, getVelocity) {\n    console.log(getVelocity);\n    this.degree = 0;\n    function rotate(degree, getVelocity) {\n      fan.style.transform = 'rotate(' + degree + 'deg)';\n      setTimeout(() => {\n        degree += getVelocity();\n        rotate(degree);\n      }, 10); //lower this to increase speed \n    }\n\n    rotate(this.degree, this.getVelocity);\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      this.harvestResource();\n    }, 1000);\n    console.log(document.getElementsByClassName('wind-mill-fan')[0]);\n    this.rotateFan(document.getElementsByClassName('wind-mill-fan')[0], 5);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.timer);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-items\",\n        id: \"wind-mill-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"wind-mill\",\n          src: process.env.PUBLIC_URL + \"/windmill.png\",\n          alt: \"broken img\",\n          style: {\n            width: `${15}rem`\n          },\n          onClick: () => {\n            this.harvestResource(this.props.miningPower);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"wind-mill-fan fan-rotate\",\n          src: process.env.PUBLIC_URL + \"/windmill-fan.png\",\n          alt: \"broken img\",\n          style: {\n            width: `${15}rem`\n          },\n          onClick: () => {\n            this.harvestResource(this.props.miningPower);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (this.state.currentResources / this.state.totalResources * 100).toFixed(0) + \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default WindMill;","map":{"version":3,"names":["React","WindMill","Component","constructor","props","harvestResource","harvestAmount","state","canHarvest","dps","updateWatts","setState","currentResources","velocity","acceleratedVelocity","handleResourceDepleted","getVelocity","resourcesMined","interval","undefined","totalResources","shouldReset","setTimeout","acceleration","componentDidUpdate","rotateFan","fan","console","log","degree","rotate","style","transform","componentDidMount","setInterval","document","getElementsByClassName","componentWillUnmount","clearInterval","timer","render","process","env","PUBLIC_URL","width","miningPower","toFixed"],"sources":["/Users/faisal/new-clicker-game/src/WindMill.js"],"sourcesContent":["import React from \"react\";\n\nclass WindMill extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.updateWatts = this.props.updateWatts\n    this.resourcesMined = this.props.resourcesMined\n    this.interval=undefined;\n    this.state = {\n      totalResources: 10,\n      currentResources: 10,\n      canHarvest: true,\n      shouldReset: false,\n      velocity: 0,\n    };\n  }\n\n  handleResourceDepleted() {\n    this.setState({\n      currentResources: 0,\n      canHarvest: false,\n      totalResources: this.state.totalResources * 1.5,\n    });\n    setTimeout(() => {\n      this.setState({ shouldReset: true });\n    }, 500);\n  }\n\n  harvestResource = (harvestAmount) => {\n    if (!this.state.canHarvest) return;\n    // If no harvest amount is passed in, that means it is an auto dps harvest \n    // so the harvest amount is set to the dps\n    harvestAmount ??= this.props.dps\n    this.updateWatts(harvestAmount);\n    this.setState({\n       currentResources: this.state.currentResources - harvestAmount,\n        velocity: this.acceleratedVelocity()\n    }, () => {\n      if (this.state.currentResources < 1) {\n        this.handleResourceDepleted();\n      }\n    })\n  };\n\n  acceleratedVelocity() {\n    let acceleration = 10\n    return this.state.velocity + acceleration\n  }\n\n  componentDidUpdate() {\n    if (this.state.shouldReset) {\n      this.setState({\n        currentResources: this.state.totalResources,\n        canHarvest: true,\n        shouldReset: false,\n      });\n    }\n  }\n\n   getVelocity = () => {\n    //console.log(this.state.velocity)\n    return this.state.velocity\n  }\n\n  rotateFan(fan, getVelocity) {  \n    console.log(getVelocity)\n    this.degree = 0;\n    \n      function rotate(degree, getVelocity) {\n      fan.style.transform = 'rotate(' + degree + 'deg)'\n       setTimeout(() => {\n          degree+=getVelocity();\n          rotate(degree);\n      },10); //lower this to increase speed \n  }\n  rotate(this.degree, this.getVelocity)\n}\n\n  componentDidMount() {\n     this.interval = setInterval(() => {\n      this.harvestResource();\n    }, 1000);\n    console.log(document.getElementsByClassName('wind-mill-fan')[0])\n    this.rotateFan(document.getElementsByClassName('wind-mill-fan')[0],5)\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.timer)\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"center-items\" id=\"wind-mill-container\">\n          <img\n            className=\"wind-mill\"\n            src={\n              process.env.PUBLIC_URL +\n             \"/windmill.png\"\n            }\n            alt=\"broken img\"\n            style={{\n              width: `${15}rem`,\n            }}\n            onClick={() => {\n              this.harvestResource(this.props.miningPower);\n            }}\n          ></img>\n             <img\n            className=\"wind-mill-fan fan-rotate\"\n            src={\n              process.env.PUBLIC_URL +\n             \"/windmill-fan.png\"\n            }\n            alt=\"broken img\"\n            style={{\n              width: `${15}rem`,\n            }}\n            onClick={() => {\n              this.harvestResource(this.props.miningPower);\n            }}\n          ></img>\n          <h1>\n            {(\n              (this.state.currentResources / this.state.totalResources) *\n              100\n            ).toFixed(0) + \"%\"}\n          </h1>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default WindMill;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}