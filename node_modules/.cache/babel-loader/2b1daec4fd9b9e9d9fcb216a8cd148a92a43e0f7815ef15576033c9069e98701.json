{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/App.js\";\nimport React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Shop from \"./shop/Shop\";\nimport Authentication from \"./Authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateShopData = (title, prop1, newVal1, prop2, newVal2) => {\n      let data = {\n        title: \"newTitle\",\n        dps: 100,\n        numActive: 1\n      };\n      let updatedDataList = this.state.shopData.map(item => {\n        if (item.title === title) {\n          // return {...item, \n          //   [prop1]: newVal1,\n          //   [prop2]: newVal2\n          // }; \n          return {\n            ...item,\n            ...data\n          };\n        }\n        return item;\n      });\n      console.log(updatedDataList);\n      this.setState({\n        shopData: updatedDataList\n      }); // set state to new object with updated list\n    };\n    this.state = {\n      totalMoney: 0,\n      dps: 0,\n      // hph is the players harvest amount per hit\n      hph: 1,\n      shopData: [{\n        title: \"Dog Miner\",\n        cost: 5,\n        dps: 1,\n        numActive: 0\n      }, {\n        title: \"Super Dog\",\n        cost: 50,\n        dps: 5,\n        numActive: 0\n      }, {\n        title: \"Mining Drill\",\n        cost: 200,\n        dps: 20,\n        numActive: 0\n      }, {\n        title: \"Example\",\n        cost: 1000,\n        dps: 100,\n        numActive: 0\n      }, {\n        title: \"hph\",\n        cost: 200,\n        numActive: 0\n      }, {\n        title: \"dps\",\n        cost: 100,\n        numActive: 0\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Authentication, {\n        getGameInfo: this.getGameInfo(),\n        setGameInfo: info => this.setGameInfo(info)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-div\",\n        id: \"center-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Money: \", this.state.totalMoney]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"dps\",\n          children: [\"DPS: \", this.state.dps]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wallet, {\n          updateMoney: moneyGained => this.updateMoney(moneyGained),\n          hph: this.state.hph,\n          dps: this.state.dps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Shop, {\n        incrementDps: increment => this.incrementDps(increment),\n        getTotalMoney: () => this.getTotalMoney(),\n        updateTotalMoney: cost => this.updateMoney(cost),\n        getDps: () => this.state.dps,\n        multHph: multFactor => this.multHph(multFactor),\n        updateShopData: (title, property, newVal) => this.updateShopData(title, property, newVal),\n        shopData: this.state.shopData\n        // helpersData = {helpersData}\n        // upgradesData = {upgradesData}\n        // updateHelpersData = {(title,newVal,idx) => this.updateHelpersData(title,newVal,idx)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n  // updateHelpersData(title,newVal,idx) {\n\n  //   this.setState(prevState => ({\n  //     helpersData: {\n  //       ...prevState.helpersData,\n  //       [idx]: \n  //     }\n  // }))\n  // }\n\n  incrementDps(increment) {\n    this.setState({\n      dps: this.state.dps + increment\n    });\n  }\n  updateMoney(moneyToUpdate) {\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyToUpdate\n    });\n  }\n  multHph(multFactor) {\n    this.setState({\n      hph: this.state.hph * multFactor\n    });\n  }\n  getTotalMoney() {\n    return this.state.totalMoney;\n  }\n  handleWalletClick(clickStrength, resourcesLeft) {\n    var moneyGained = clickStrength;\n    // Set a state \"fullyMined\" to true that gets passed to the wallet so when fullyMined is true the wallet resets its variables\n    // and then in this block, call a function like \"resetResource\" to reset it and get prepared to implement chest drops when the \n    // resource is fully mined.\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyGained\n    });\n  }\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      dps: this.state.dps,\n      hph: this.state.hph\n    };\n  }\n  setGameInfo(info) {\n    console.log(info);\n    this.setState({\n      totalMoney: info.totalMoney,\n      dps: info.dps,\n      hph: info.hph\n    });\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Wallet","Shop","Authentication","App","Component","constructor","props","updateShopData","title","prop1","newVal1","prop2","newVal2","data","dps","numActive","updatedDataList","state","shopData","map","item","console","log","setState","totalMoney","hph","cost","render","getGameInfo","info","setGameInfo","moneyGained","updateMoney","increment","incrementDps","getTotalMoney","multFactor","multHph","property","newVal","moneyToUpdate","handleWalletClick","clickStrength","resourcesLeft"],"sources":["/Users/faisal/new-clicker-game/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Shop from \"./shop/Shop\"\nimport Authentication from \"./Authentication\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMoney: 0,\n      dps: 0,\n      // hph is the players harvest amount per hit\n      hph: 1,\n      shopData: [{title: \"Dog Miner\", cost: 5, dps: 1, numActive: 0}, {title : \"Super Dog\", cost: 50 , dps: 5, numActive: 0},\n      { title: \"Mining Drill\", cost: 200 ,dps: 20, numActive: 0},{ title: \"Example\", cost: 1000, dps: 100, numActive: 0},\n      { title: \"hph\", cost: 200, numActive: 0}, {title: \"dps\", cost: 100, numActive: 0}],\n    };\n  }\n  render() {\n    return (\n      <div id=\"body\">\n         <Authentication\n          getGameInfo={this.getGameInfo()}\n          setGameInfo={(info) => this.setGameInfo(info)}\n        />\n        <div className=\"grid-div\" id=\"center-div\">\n          <h1>Money: {this.state.totalMoney}</h1>\n          <h1 id=\"dps\">DPS: {this.state.dps}</h1>\n          <Wallet\n            updateMoney={(moneyGained) => this.updateMoney(moneyGained)}\n            hph={this.state.hph}\n            dps={this.state.dps}\n          />\n        </div>\n        <Shop\n          incrementDps = {(increment) => this.incrementDps(increment)}\n          getTotalMoney = {() => this.getTotalMoney()}\n          updateTotalMoney = {(cost) => this.updateMoney(cost)}\n          getDps = {() => this.state.dps}\n          multHph= {(multFactor,) => this.multHph(multFactor)}\n          updateShopData = {(title,property,newVal) => this.updateShopData(title,property,newVal)}\n          shopData = {this.state.shopData}\n          // helpersData = {helpersData}\n          // upgradesData = {upgradesData}\n          // updateHelpersData = {(title,newVal,idx) => this.updateHelpersData(title,newVal,idx)}\n        />\n       \n      </div>\n    );\n  }\n\n\n  // updateHelpersData(title,newVal,idx) {\n\n  \n  //   this.setState(prevState => ({\n  //     helpersData: {\n  //       ...prevState.helpersData,\n  //       [idx]: \n  //     }\n  // }))\n  // }\n\n  updateShopData = (title, prop1, newVal1,prop2,newVal2) => {\n    let data = {title: \"newTitle\", dps: 100, numActive: 1}\n    let updatedDataList = this.state.shopData.map(item => \n      {\n        if (item.title === title){\n          // return {...item, \n          //   [prop1]: newVal1,\n          //   [prop2]: newVal2\n          // }; \n          return {...item, \n            ...data\n          }; \n        }\n        return item;\n      });\n      console.log(updatedDataList)\n    this.setState({shopData: updatedDataList}); // set state to new object with updated list\n  }\n\n  incrementDps(increment) {\n    this.setState({\n      dps: this.state.dps + increment\n    });\n  }\n\n  updateMoney(moneyToUpdate) {\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyToUpdate\n    })\n  }\n\n  multHph(multFactor) {\n    this.setState({\n      hph: this.state.hph * multFactor\n    })\n  }\n  getTotalMoney() {\n    return this.state.totalMoney\n  }\n  handleWalletClick(clickStrength,resourcesLeft) {\n    var moneyGained = clickStrength\n      // Set a state \"fullyMined\" to true that gets passed to the wallet so when fullyMined is true the wallet resets its variables\n      // and then in this block, call a function like \"resetResource\" to reset it and get prepared to implement chest drops when the \n      // resource is fully mined.\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyGained \n    });\n  }\n\n\n\n\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      dps: this.state.dps,\n      hph: this.state.hph\n    };\n  }\n\n  setGameInfo(info) {\n    console.log(info)\n    this.setState({\n      totalMoney: info.totalMoney,\n      dps: info.dps,\n      hph: info.hph,\n    });\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}