{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/WindMill.js\";\nimport React from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WindMill extends React.Component {\n  constructor(props) {\n    super(props);\n    this.accelerateFan = acceleration => {\n      //if (!this.state.canHarvest) return;\n      // If no harvest amount is passed in, that means it is an auto dps harvest \n      // so the harvest amount is set to the dps\n      acceleration ??= this.props.dps * 100000;\n      console.log(acceleration);\n      //this.updateWatts(acceleration);\n      this.setState({\n        velocity: this.state.velocity + this.getAcceleration(acceleration)\n      });\n    };\n    this.updateWatts = this.props.updateWatts;\n    this.resourcesMined = this.props.resourcesMined;\n    this.interval = undefined;\n    this.state = {\n      totalResources: 10,\n      currentResources: 10,\n      canHarvest: true,\n      shouldReset: false,\n      velocity: 0\n    };\n  }\n  handleResourceDepleted() {\n    this.setState({\n      currentResources: 0,\n      canHarvest: false,\n      totalResources: this.state.totalResources * 1.5\n    });\n    setTimeout(() => {\n      this.setState({\n        shouldReset: true\n      });\n    }, 500);\n  }\n  getAcceleration(force) {\n    let constantDivisor = 15;\n    return force / constantDivisor;\n  }\n  getDeceleration(velocity) {\n    if (velocity === 0) {\n      return 0;\n    }\n    let deceleration = velocity * .001;\n    return velocity - deceleration >= 0 ? deceleration : velocity - deceleration;\n  }\n  acceleratedVelocity(speed) {\n    return this.state.velocity + speed;\n  }\n  componentDidUpdate() {\n    if (this.state.shouldReset) {\n      this.setState({\n        currentResources: this.state.totalResources,\n        canHarvest: true,\n        shouldReset: false\n      });\n    }\n  }\n  getVelocity(obj) {\n    return obj.state.velocity;\n  }\n  rotateFan(fan) {\n    this.degree = 0;\n    this.timer = 0;\n    function rotate(degree, getVelocity, getDeceleration, obj, timer) {\n      fan.style.transform = 'rotate(' + degree + 'deg)';\n      setTimeout(() => {\n        timer++;\n        if (timer >= 300) {\n          obj.updateWatts(obj.state.velocity / 2);\n          obj.setState({\n            velocity: obj.state.velocity + 1000\n          });\n          timer = 0;\n        }\n        degree += getVelocity(obj);\n        rotate(degree, getVelocity, getDeceleration, obj, timer);\n        obj.setState({\n          velocity: obj.state.velocity - getDeceleration(getVelocity(obj))\n        });\n      }, 1); //lower this to increase speed \n    }\n\n    rotate(this.degree, this.getVelocity, this.getDeceleration, this, this.timer);\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      //this.accelerateFan();\n    }, 1000);\n    this.rotateFan(document.getElementsByClassName('wind-mill-fan')[0], 5);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.timer);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-items\",\n        id: \"wind-mill-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"wind-mill\",\n          src: process.env.PUBLIC_URL + \"/windmill.png\",\n          alt: \"broken img\",\n          style: {\n            width: `${15}rem`\n          },\n          onClick: () => {\n            this.accelerateFan(this.props.miningPower);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"wind-mill-fan fan-rotate\",\n          src: process.env.PUBLIC_URL + \"/windmill-fan.png\",\n          alt: \"broken img\",\n          style: {\n            width: `${15}rem`\n          },\n          onClick: () => {\n            this.accelerateFan(this.props.miningPower);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.velocity.toFixed(1) + \" m/s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\nexport default WindMill;","map":{"version":3,"names":["React","WindMill","Component","constructor","props","accelerateFan","acceleration","dps","console","log","setState","velocity","state","getAcceleration","updateWatts","resourcesMined","interval","undefined","totalResources","currentResources","canHarvest","shouldReset","handleResourceDepleted","setTimeout","force","constantDivisor","getDeceleration","deceleration","acceleratedVelocity","speed","componentDidUpdate","getVelocity","obj","rotateFan","fan","degree","timer","rotate","style","transform","componentDidMount","setInterval","document","getElementsByClassName","componentWillUnmount","clearInterval","render","process","env","PUBLIC_URL","width","miningPower","toFixed"],"sources":["/Users/faisal/new-clicker-game/src/WindMill.js"],"sourcesContent":["import React from \"react\";\n\nclass WindMill extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.updateWatts = this.props.updateWatts\n    this.resourcesMined = this.props.resourcesMined\n    this.interval=undefined;\n    this.state = {\n      totalResources: 10,\n      currentResources: 10,\n      canHarvest: true,\n      shouldReset: false,\n      velocity: 0,\n    };\n  }\n\n  handleResourceDepleted() {\n    this.setState({\n      currentResources: 0,\n      canHarvest: false,\n      totalResources: this.state.totalResources * 1.5,\n    });\n    setTimeout(() => {\n      this.setState({ shouldReset: true });\n    }, 500);\n  }\n\n  accelerateFan = (acceleration) => {\n    \n    //if (!this.state.canHarvest) return;\n    // If no harvest amount is passed in, that means it is an auto dps harvest \n    // so the harvest amount is set to the dps\n    acceleration ??= this.props.dps*100000\n    console.log(acceleration)\n    //this.updateWatts(acceleration);\n    this.setState({\n        velocity: this.state.velocity + this.getAcceleration(acceleration) \n    })\n  };\n\n  getAcceleration(force) {\n    let constantDivisor = 15\n    return force/constantDivisor\n  }\n\n  getDeceleration(velocity) {\n    if(velocity===0) {return 0}\n    let deceleration = velocity*.001\n    return velocity-deceleration>=0 ? deceleration: velocity-deceleration\n  }\n\n  acceleratedVelocity(speed) {\n    return this.state.velocity + speed\n  }\n\n  componentDidUpdate() {\n    if (this.state.shouldReset) {\n      this.setState({\n        currentResources: this.state.totalResources,\n        canHarvest: true,\n        shouldReset: false,\n      });\n    }\n  }\n\n   getVelocity(obj) {\n    return obj.state.velocity\n  }\n\n  rotateFan(fan) {  \n    this.degree = 0;\n    this.timer=0\n      function rotate(degree, getVelocity, getDeceleration, obj, timer) {\n      fan.style.transform = 'rotate(' + degree + 'deg)'\n       setTimeout(() => {\n          timer++\n          if(timer>=300) {\n            obj.updateWatts(obj.state.velocity/2)\n            obj.setState({\n              velocity: obj.state.velocity + 1000,\n            })\n            timer=0\n          }\n          degree+=getVelocity(obj);\n          rotate(degree, getVelocity, getDeceleration, obj, timer);\n          obj.setState({\n            velocity: obj.state.velocity - getDeceleration(getVelocity(obj)),\n          })\n      },1); //lower this to increase speed \n  }\n  rotate(this.degree, this.getVelocity, this.getDeceleration, this, this.timer)\n}\n\n  componentDidMount() {\n     this.interval = setInterval(() => {\n      //this.accelerateFan();\n    }, 1000);\n    this.rotateFan(document.getElementsByClassName('wind-mill-fan')[0],5)\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.timer)\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"center-items\" id=\"wind-mill-container\">\n          <img\n            className=\"wind-mill\"\n            src={\n              process.env.PUBLIC_URL +\n             \"/windmill.png\"\n            }\n            alt=\"broken img\"\n            style={{\n              width: `${15}rem`,\n            }}\n            onClick={() => {\n              this.accelerateFan(this.props.miningPower);\n            }}\n          ></img>\n             <img\n            className=\"wind-mill-fan fan-rotate\"\n            src={\n              process.env.PUBLIC_URL +\n             \"/windmill-fan.png\"\n            }\n            alt=\"broken img\"\n            style={{\n              width: `${15}rem`,\n            }}\n            onClick={() => {\n              this.accelerateFan(this.props.miningPower);\n            }}\n          ></img>\n          <h1>\n            {(\n              this.state.velocity\n            ).toFixed(1) + \" m/s\"}\n          </h1>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default WindMill;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}