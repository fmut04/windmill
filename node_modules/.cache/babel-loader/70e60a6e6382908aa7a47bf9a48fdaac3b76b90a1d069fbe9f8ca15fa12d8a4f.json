{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/App.js\";\nimport React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Upgrades from \"./Upgrades\";\nimport Authentication from \"./Authentication\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMoney: 0\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridDiv\",\n        id: \"centerDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Money: \", this.state.totalMoney]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wallet, {\n          resourceClicked: (clickStrength, resourcesLeft) => this.handleWalletClick(clickStrength, resourcesLeft),\n          resourcesMined: 0,\n          harvestingPower: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gridDiv\",\n        id: \"rightDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Upgrades\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Upgrades, {\n          text: \"Click Speed\",\n          task: \"upgradeClickSpeed\",\n          upgradesClick: cost => this.handleClickSpeedUpgrade(cost)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Upgrades, {\n          text: \"Luck\",\n          task: \"upgradeLuck\",\n          upgradesClick: cost => this.handleLuckUpgrade(cost)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Upgrades, {\n          text: \"Money Count\",\n          task: \"upgradeMoneyCount\",\n          upgradesClick: cost => this.handleMoneyCountUpgrade(cost)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Authentication, {\n        getGameInfo: this.getGameInfo(),\n        setGameInfo: info => this.setGameInfo(info)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n  handleWalletClick(clickStrength, resourcesLeft) {\n    var moneyGained = clickStrength;\n    // Set a state \"fullyMined\" to true that gets passed to the wallet so when fullyMined is true the wallet resets its variables\n    // and then in this block, call a function like \"resetResource\" to reset it and get prepared to implement chest drops when the \n    // resource is fully mined.\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyGained\n    });\n    //this.handleMoneyAnimation(moneyArr);\n  }\n\n  handleMoneyAnimation(moneyArr) {\n    var topPercent = 40,\n      yDir = -1,\n      xDirsArr = [];\n    for (var i = 0; i < moneyArr.length; i++) {\n      xDirsArr.push(Math.random() * 2 - 1);\n      moneyArr[i].style.left = 40 + \"%\";\n    }\n    var animateId = setInterval(() => {\n      if (topPercent < 10) {\n        yDir *= -1;\n        for (var i = 0; i < xDirsArr.length; i++) {\n          xDirsArr[i] *= -1;\n        }\n      }\n      topPercent += yDir;\n\n      //Faces money in dir its pointing\n      //Looks a little weird it can be improved\n      // var angle = (Math.atan2(yDir, xDir) * 180) / Math.PI;\n      // money.style.transform = \"rotate(\" + angle + \"deg)\";\n      for (var j = 0; j < moneyArr.length; j++) {\n        moneyArr[j].style.top = topPercent + \"%\";\n        moneyArr[j].style.left = xDirsArr[j] + parseFloat(moneyArr[j].style.left) + \"%\";\n      }\n      if (topPercent > 40) clearInterval(animateId);\n    }, this.state.clickSpeed / 80);\n    this.setState({\n      clicked: true\n    });\n  }\n  getMoneyValue() {\n    var rand = Math.floor(Math.random() * 100) + this.state.luck;\n    if (rand > 95) rand = 100;else if (rand > 85) rand = 50;else if (rand > 70) rand = 20;else if (rand > 50) rand = 10;else if (rand > 25) rand = 5;else rand = 1;\n    return rand;\n  }\n\n  //Returns true if upgrade completed\n  //returns maxed if max upgrade level reached\n  //returns false if not enough money for purchase\n\n  handleClickSpeedUpgrade(cost) {\n    if (this.state.clickSpeed > 500 && this.state.totalMoney - cost >= 0) {\n      this.setState({\n        clickSpeed: this.state.clickSpeed - 200,\n        totalMoney: this.state.totalMoney - cost\n      });\n      return true;\n    } else if (this.state.clickSpeed < 500) {\n      this.setState({\n        clickSpeed: 500\n      });\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n  handleLuckUpgrade(cost) {\n    if (this.state.luck <= 20 && this.state.totalMoney - cost >= 0) {\n      this.setState({\n        totalMoney: this.state.totalMoney - cost,\n        luck: this.state.luck + 2\n      });\n      return true;\n    } else if (this.state.luck > 20) {\n      this.setState({\n        luck: 20\n      });\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n  handleMoneyCountUpgrade(cost) {\n    if (document.getElementsByClassName(\"bill\").length < 5 && this.state.totalMoney - cost >= 0) {\n      this.addMoney();\n      this.setState({\n        totalMoney: this.state.totalMoney - cost\n      });\n      return true;\n    } else if (document.getElementsByClassName(\"bill\").length >= 5) {\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n\n  // addMoney() {\n  //   var newBill = document.createElement(\"img\");\n  //   newBill.src = process.env.PUBLIC_URL + \"/bills/bill-1.png\";\n  //   document.getElementById(\"body\").appendChild(newBill);\n  //   newBill.className = \"bill\";\n  // }\n\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      clickSpeed: this.state.clickSpeed,\n      luck: this.state.luck,\n      moneyCount: document.getElementsByClassName(\"bill\").length\n    };\n  }\n  setGameInfo(info) {\n    console.log(info);\n    this.setState({\n      totalMoney: info.totalMoney,\n      clickSpeed: info.clickSpeed,\n      luck: info.luck,\n      moneyCount: info.moneyCount + 1\n    });\n\n    // var bills = document.getElementsByClassName(\"bill\");\n    // while (bills.length > this.state.moneyCount) {\n    //   bills[bills.length - 1].remove();\n    // }\n  }\n}\n\nexport default App;","map":{"version":3,"names":["React","Wallet","Upgrades","Authentication","App","Component","constructor","props","state","totalMoney","render","clickStrength","resourcesLeft","handleWalletClick","cost","handleClickSpeedUpgrade","handleLuckUpgrade","handleMoneyCountUpgrade","getGameInfo","info","setGameInfo","moneyGained","setState","handleMoneyAnimation","moneyArr","topPercent","yDir","xDirsArr","i","length","push","Math","random","style","left","animateId","setInterval","j","top","parseFloat","clearInterval","clickSpeed","clicked","getMoneyValue","rand","floor","luck","document","getElementsByClassName","addMoney","moneyCount","console","log"],"sources":["/Users/faisal/new-clicker-game/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Upgrades from \"./Upgrades\";\nimport Authentication from \"./Authentication\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalMoney: 0\n    };\n  }\n  render() {\n    return (\n      <div id=\"body\">\n        <div className=\"gridDiv\" id=\"centerDiv\">\n          <h1>Money: {this.state.totalMoney}</h1>\n          <Wallet\n            resourceClicked={(clickStrength,resourcesLeft) => this.handleWalletClick(clickStrength,resourcesLeft)}\n            resourcesMined={0}\n            harvestingPower={1}\n          />\n        </div>\n        <div className=\"gridDiv\" id=\"rightDiv\">\n          <h1>Upgrades</h1>\n          <Upgrades\n            text=\"Click Speed\"\n            task=\"upgradeClickSpeed\"\n            upgradesClick={(cost) => this.handleClickSpeedUpgrade(cost)}\n          />\n\n          <Upgrades\n            text=\"Luck\"\n            task=\"upgradeLuck\"\n            upgradesClick={(cost) => this.handleLuckUpgrade(cost)}\n          />\n\n          <Upgrades\n            text=\"Money Count\"\n            task=\"upgradeMoneyCount\"\n            upgradesClick={(cost) => this.handleMoneyCountUpgrade(cost)}\n          />\n        </div>\n        <Authentication\n          getGameInfo={this.getGameInfo()}\n          setGameInfo={(info) => this.setGameInfo(info)}\n        />\n      </div>\n    );\n  }\n\n  handleWalletClick(clickStrength,resourcesLeft) {\n    var moneyGained = clickStrength\n      // Set a state \"fullyMined\" to true that gets passed to the wallet so when fullyMined is true the wallet resets its variables\n      // and then in this block, call a function like \"resetResource\" to reset it and get prepared to implement chest drops when the \n      // resource is fully mined.\n    this.setState({\n      totalMoney: this.state.totalMoney + moneyGained \n    });\n    //this.handleMoneyAnimation(moneyArr);\n  }\n\n  handleMoneyAnimation(moneyArr) {\n    var topPercent = 40,\n      yDir = -1,\n      xDirsArr = [];\n\n    for (var i = 0; i < moneyArr.length; i++) {\n      xDirsArr.push(Math.random() * 2 - 1);\n      moneyArr[i].style.left = 40 + \"%\";\n    }\n    var animateId = setInterval(() => {\n      if (topPercent < 10) {\n        yDir *= -1;\n        for (var i = 0; i < xDirsArr.length; i++) {\n          xDirsArr[i] *= -1;\n        }\n      }\n\n      topPercent += yDir;\n \n      //Faces money in dir its pointing\n      //Looks a little weird it can be improved\n      // var angle = (Math.atan2(yDir, xDir) * 180) / Math.PI;\n      // money.style.transform = \"rotate(\" + angle + \"deg)\";\n      for (var j = 0; j < moneyArr.length; j++) {\n        moneyArr[j].style.top = topPercent + \"%\";\n        moneyArr[j].style.left =\n          xDirsArr[j] + parseFloat(moneyArr[j].style.left) + \"%\";\n      }\n\n      if (topPercent > 40) clearInterval(animateId);\n    }, this.state.clickSpeed / 80);\n    this.setState({ clicked: true });\n  }\n\n  getMoneyValue() {\n    var rand = Math.floor(Math.random() * 100) + this.state.luck;\n    if (rand > 95) rand = 100;\n    else if (rand > 85) rand = 50;\n    else if (rand > 70) rand = 20;\n    else if (rand > 50) rand = 10;\n    else if (rand > 25) rand = 5;\n    else rand = 1;\n\n    return rand;\n  }\n\n  //Returns true if upgrade completed\n  //returns maxed if max upgrade level reached\n  //returns false if not enough money for purchase\n\n  handleClickSpeedUpgrade(cost) {\n    if (this.state.clickSpeed > 500 && this.state.totalMoney - cost >= 0) {\n      this.setState({\n        clickSpeed: this.state.clickSpeed - 200,\n        totalMoney: this.state.totalMoney - cost,\n      });\n      return true;\n    } else if (this.state.clickSpeed < 500) {\n      this.setState({ clickSpeed: 500 });\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n\n  handleLuckUpgrade(cost) {\n    if (this.state.luck <= 20 && this.state.totalMoney - cost >= 0) {\n      this.setState({\n        totalMoney: this.state.totalMoney - cost,\n        luck: this.state.luck + 2,\n      });\n      return true;\n    } else if (this.state.luck > 20) {\n      this.setState({ luck: 20 });\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n\n  handleMoneyCountUpgrade(cost) {\n    if (\n      document.getElementsByClassName(\"bill\").length < 5 &&\n      this.state.totalMoney - cost >= 0\n    ) {\n      this.addMoney();\n      this.setState({\n        totalMoney: this.state.totalMoney - cost,\n      });\n      return true;\n    } else if (document.getElementsByClassName(\"bill\").length >= 5) {\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n\n  // addMoney() {\n  //   var newBill = document.createElement(\"img\");\n  //   newBill.src = process.env.PUBLIC_URL + \"/bills/bill-1.png\";\n  //   document.getElementById(\"body\").appendChild(newBill);\n  //   newBill.className = \"bill\";\n  // }\n\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      clickSpeed: this.state.clickSpeed,\n      luck: this.state.luck,\n      moneyCount: document.getElementsByClassName(\"bill\").length,\n    };\n  }\n\n  setGameInfo(info) {\n    console.log(info)\n    this.setState({\n      totalMoney: info.totalMoney,\n      clickSpeed: info.clickSpeed,\n      luck: info.luck,\n      moneyCount: info.moneyCount + 1,\n    });\n\n    // var bills = document.getElementsByClassName(\"bill\");\n    // while (bills.length > this.state.moneyCount) {\n    //   bills[bills.length - 1].remove();\n    // }\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAC9C,MAAMC,GAAG,SAASJ,KAAK,CAACK,SAAS,CAAC;EAChCC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,UAAU,EAAE;IACd,CAAC;EACH;EACAC,MAAM,GAAG;IACP,oBACE;MAAK,EAAE,EAAC,MAAM;MAAA,wBACZ;QAAK,SAAS,EAAC,SAAS;QAAC,EAAE,EAAC,WAAW;QAAA,wBACrC;UAAA,WAAI,SAAO,EAAC,IAAI,CAACF,KAAK,CAACC,UAAU;QAAA;UAAA;UAAA;UAAA;QAAA,QAAM,eACvC,QAAC,MAAM;UACL,eAAe,EAAE,CAACE,aAAa,EAACC,aAAa,KAAK,IAAI,CAACC,iBAAiB,CAACF,aAAa,EAACC,aAAa,CAAE;UACtG,cAAc,EAAE,CAAE;UAClB,eAAe,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QACnB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,SAAS;QAAC,EAAE,EAAC,UAAU;QAAA,wBACpC;UAAA,UAAI;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAK,eACjB,QAAC,QAAQ;UACP,IAAI,EAAC,aAAa;UAClB,IAAI,EAAC,mBAAmB;UACxB,aAAa,EAAGE,IAAI,IAAK,IAAI,CAACC,uBAAuB,CAACD,IAAI;QAAE;UAAA;UAAA;UAAA;QAAA,QAC5D,eAEF,QAAC,QAAQ;UACP,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,aAAa;UAClB,aAAa,EAAGA,IAAI,IAAK,IAAI,CAACE,iBAAiB,CAACF,IAAI;QAAE;UAAA;UAAA;UAAA;QAAA,QACtD,eAEF,QAAC,QAAQ;UACP,IAAI,EAAC,aAAa;UAClB,IAAI,EAAC,mBAAmB;UACxB,aAAa,EAAGA,IAAI,IAAK,IAAI,CAACG,uBAAuB,CAACH,IAAI;QAAE;UAAA;UAAA;UAAA;QAAA,QAC5D;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN,QAAC,cAAc;QACb,WAAW,EAAE,IAAI,CAACI,WAAW,EAAG;QAChC,WAAW,EAAGC,IAAI,IAAK,IAAI,CAACC,WAAW,CAACD,IAAI;MAAE;QAAA;QAAA;QAAA;MAAA,QAC9C;IAAA;MAAA;MAAA;MAAA;IAAA,QACE;EAEV;EAEAN,iBAAiB,CAACF,aAAa,EAACC,aAAa,EAAE;IAC7C,IAAIS,WAAW,GAAGV,aAAa;IAC7B;IACA;IACA;IACF,IAAI,CAACW,QAAQ,CAAC;MACZb,UAAU,EAAE,IAAI,CAACD,KAAK,CAACC,UAAU,GAAGY;IACtC,CAAC,CAAC;IACF;EACF;;EAEAE,oBAAoB,CAACC,QAAQ,EAAE;IAC7B,IAAIC,UAAU,GAAG,EAAE;MACjBC,IAAI,GAAG,CAAC,CAAC;MACTC,QAAQ,GAAG,EAAE;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,QAAQ,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACxCD,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;MACpCR,QAAQ,CAACI,CAAC,CAAC,CAACK,KAAK,CAACC,IAAI,GAAG,EAAE,GAAG,GAAG;IACnC;IACA,IAAIC,SAAS,GAAGC,WAAW,CAAC,MAAM;MAChC,IAAIX,UAAU,GAAG,EAAE,EAAE;QACnBC,IAAI,IAAI,CAAC,CAAC;QACV,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UACxCD,QAAQ,CAACC,CAAC,CAAC,IAAI,CAAC,CAAC;QACnB;MACF;MAEAH,UAAU,IAAIC,IAAI;;MAElB;MACA;MACA;MACA;MACA,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,QAAQ,CAACK,MAAM,EAAEQ,CAAC,EAAE,EAAE;QACxCb,QAAQ,CAACa,CAAC,CAAC,CAACJ,KAAK,CAACK,GAAG,GAAGb,UAAU,GAAG,GAAG;QACxCD,QAAQ,CAACa,CAAC,CAAC,CAACJ,KAAK,CAACC,IAAI,GACpBP,QAAQ,CAACU,CAAC,CAAC,GAAGE,UAAU,CAACf,QAAQ,CAACa,CAAC,CAAC,CAACJ,KAAK,CAACC,IAAI,CAAC,GAAG,GAAG;MAC1D;MAEA,IAAIT,UAAU,GAAG,EAAE,EAAEe,aAAa,CAACL,SAAS,CAAC;IAC/C,CAAC,EAAE,IAAI,CAAC3B,KAAK,CAACiC,UAAU,GAAG,EAAE,CAAC;IAC9B,IAAI,CAACnB,QAAQ,CAAC;MAAEoB,OAAO,EAAE;IAAK,CAAC,CAAC;EAClC;EAEAC,aAAa,GAAG;IACd,IAAIC,IAAI,GAAGb,IAAI,CAACc,KAAK,CAACd,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAACxB,KAAK,CAACsC,IAAI;IAC5D,IAAIF,IAAI,GAAG,EAAE,EAAEA,IAAI,GAAG,GAAG,CAAC,KACrB,IAAIA,IAAI,GAAG,EAAE,EAAEA,IAAI,GAAG,EAAE,CAAC,KACzB,IAAIA,IAAI,GAAG,EAAE,EAAEA,IAAI,GAAG,EAAE,CAAC,KACzB,IAAIA,IAAI,GAAG,EAAE,EAAEA,IAAI,GAAG,EAAE,CAAC,KACzB,IAAIA,IAAI,GAAG,EAAE,EAAEA,IAAI,GAAG,CAAC,CAAC,KACxBA,IAAI,GAAG,CAAC;IAEb,OAAOA,IAAI;EACb;;EAEA;EACA;EACA;;EAEA7B,uBAAuB,CAACD,IAAI,EAAE;IAC5B,IAAI,IAAI,CAACN,KAAK,CAACiC,UAAU,GAAG,GAAG,IAAI,IAAI,CAACjC,KAAK,CAACC,UAAU,GAAGK,IAAI,IAAI,CAAC,EAAE;MACpE,IAAI,CAACQ,QAAQ,CAAC;QACZmB,UAAU,EAAE,IAAI,CAACjC,KAAK,CAACiC,UAAU,GAAG,GAAG;QACvChC,UAAU,EAAE,IAAI,CAACD,KAAK,CAACC,UAAU,GAAGK;MACtC,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC,MAAM,IAAI,IAAI,CAACN,KAAK,CAACiC,UAAU,GAAG,GAAG,EAAE;MACtC,IAAI,CAACnB,QAAQ,CAAC;QAAEmB,UAAU,EAAE;MAAI,CAAC,CAAC;MAClC,OAAO,OAAO;IAChB,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF;EAEAzB,iBAAiB,CAACF,IAAI,EAAE;IACtB,IAAI,IAAI,CAACN,KAAK,CAACsC,IAAI,IAAI,EAAE,IAAI,IAAI,CAACtC,KAAK,CAACC,UAAU,GAAGK,IAAI,IAAI,CAAC,EAAE;MAC9D,IAAI,CAACQ,QAAQ,CAAC;QACZb,UAAU,EAAE,IAAI,CAACD,KAAK,CAACC,UAAU,GAAGK,IAAI;QACxCgC,IAAI,EAAE,IAAI,CAACtC,KAAK,CAACsC,IAAI,GAAG;MAC1B,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC,MAAM,IAAI,IAAI,CAACtC,KAAK,CAACsC,IAAI,GAAG,EAAE,EAAE;MAC/B,IAAI,CAACxB,QAAQ,CAAC;QAAEwB,IAAI,EAAE;MAAG,CAAC,CAAC;MAC3B,OAAO,OAAO;IAChB,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF;EAEA7B,uBAAuB,CAACH,IAAI,EAAE;IAC5B,IACEiC,QAAQ,CAACC,sBAAsB,CAAC,MAAM,CAAC,CAACnB,MAAM,GAAG,CAAC,IAClD,IAAI,CAACrB,KAAK,CAACC,UAAU,GAAGK,IAAI,IAAI,CAAC,EACjC;MACA,IAAI,CAACmC,QAAQ,EAAE;MACf,IAAI,CAAC3B,QAAQ,CAAC;QACZb,UAAU,EAAE,IAAI,CAACD,KAAK,CAACC,UAAU,GAAGK;MACtC,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC,MAAM,IAAIiC,QAAQ,CAACC,sBAAsB,CAAC,MAAM,CAAC,CAACnB,MAAM,IAAI,CAAC,EAAE;MAC9D,OAAO,OAAO;IAChB,CAAC,MAAM;MACL,OAAO,KAAK;IACd;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEAX,WAAW,GAAG;IACZ,OAAO;MACLT,UAAU,EAAE,IAAI,CAACD,KAAK,CAACC,UAAU;MACjCgC,UAAU,EAAE,IAAI,CAACjC,KAAK,CAACiC,UAAU;MACjCK,IAAI,EAAE,IAAI,CAACtC,KAAK,CAACsC,IAAI;MACrBI,UAAU,EAAEH,QAAQ,CAACC,sBAAsB,CAAC,MAAM,CAAC,CAACnB;IACtD,CAAC;EACH;EAEAT,WAAW,CAACD,IAAI,EAAE;IAChBgC,OAAO,CAACC,GAAG,CAACjC,IAAI,CAAC;IACjB,IAAI,CAACG,QAAQ,CAAC;MACZb,UAAU,EAAEU,IAAI,CAACV,UAAU;MAC3BgC,UAAU,EAAEtB,IAAI,CAACsB,UAAU;MAC3BK,IAAI,EAAE3B,IAAI,CAAC2B,IAAI;MACfI,UAAU,EAAE/B,IAAI,CAAC+B,UAAU,GAAG;IAChC,CAAC,CAAC;;IAEF;IACA;IACA;IACA;EACF;AACF;;AAEA,eAAe9C,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}