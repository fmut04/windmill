{"ast":null,"code":"var _jsxFileName = \"/Users/faisal/new-clicker-game/src/Wallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Wallet(_ref) {\n  _s();\n  let {\n    updateMoney,\n    resourcesMined,\n    harvestingPower,\n    dps\n  } = _ref;\n  const [totalResources, setTotalResources] = useState((1 + resourcesMined) * 10);\n  const [currentResources, setCurrentResources] = useState(totalResources);\n  const [canHarvest, setCanHarvest] = useState(true);\n  const [shouldReset, setShouldReset] = useState(false);\n  const harvestDps = useCallback(() => {\n    harvestResource(dps);\n  }, [harvestResource]);\n  useEffect(() => {\n    if (shouldReset) {\n      setCurrentResources(totalResources);\n      setCanHarvest(true);\n      setShouldReset(false);\n    }\n  }, [shouldReset, totalResources]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      harvestDps();\n    }, 600);\n    return () => clearInterval(interval);\n  }, [harvestDps]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centerItems\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"wallet\",\n        src: process.env.PUBLIC_URL + currentResources > 0 ? \"/wallet/Wallet-0.png\" : \"/wallet/Wallet-1.png\",\n        alt: \"broken img\",\n        style: {\n          width: `${10 * (currentResources / totalResources) + 10}rem`\n        }\n        //style={{width: `${20*.3}px`} , height: `${currentResources/totalResources*100}%`}}\n        ,\n        onClick: () => {\n          harvestResource(harvestingPower);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: (currentResources / totalResources * 100).toFixed(0) + \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n  function harvestResource(harvestAmount) {\n    if (!canHarvest) return;\n    updateMoney(harvestAmount);\n    setCurrentResources(currentResources - harvestAmount);\n    console.log(currentResources - harvestAmount);\n    if (currentResources <= 1) {\n      handleResourceDepleted();\n    }\n  }\n  function handleResourceDepleted() {\n    setCurrentResources(0);\n    setCanHarvest(false);\n    setTotalResources(totalResources * 1.1);\n    setTimeout(() => {\n      setShouldReset(true);\n    }, 500);\n  }\n}\n_s(Wallet, \"2Et/qrhNu31+72I5T6JTrYuccKA=\");\n_c = Wallet;\nexport default Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Wallet","updateMoney","resourcesMined","harvestingPower","dps","totalResources","setTotalResources","currentResources","setCurrentResources","canHarvest","setCanHarvest","shouldReset","setShouldReset","harvestDps","harvestResource","interval","setInterval","clearInterval","process","env","PUBLIC_URL","width","toFixed","harvestAmount","console","log","handleResourceDepleted","setTimeout"],"sources":["/Users/faisal/new-clicker-game/src/Wallet.js"],"sourcesContent":["import React, {useState, useEffect, useCallback} from \"react\";\n\nfunction Wallet({ updateMoney, resourcesMined, harvestingPower, dps }) {\n  const [totalResources,setTotalResources] = useState((1+resourcesMined)*10);\n  const [currentResources,setCurrentResources] = useState(totalResources);\n  const [canHarvest,setCanHarvest] = useState(true)\n  const [shouldReset,setShouldReset] = useState(false)\n\n  const harvestDps = useCallback(() => {\n    harvestResource(dps)\n  },[harvestResource])\n\n  useEffect(() => {\n    if(shouldReset) {\n    setCurrentResources(totalResources)\n    setCanHarvest(true)\n    setShouldReset(false)\n    }\n  }, [shouldReset,totalResources])\n  \n  useEffect(() => {\n    const interval = setInterval(() => {\n      harvestDps()\n    }, 600);\n    return () => clearInterval(interval);\n  },[harvestDps])\n  \n  return (\n    <>\n    <div className=\"centerItems\"> \n    <img\n        id=\"wallet\"\n        src={process.env.PUBLIC_URL + currentResources>0 ? \"/wallet/Wallet-0.png\" : \"/wallet/Wallet-1.png\"}\n        alt=\"broken img\"\n        style={{width: `${10*(currentResources/totalResources)+10}rem`}}\n         //style={{width: `${20*.3}px`} , height: `${currentResources/totalResources*100}%`}}\n        onClick={() => {\n          harvestResource(harvestingPower)\n        }}\n      ></img>\n      <h1>\n        {(currentResources/totalResources*100).toFixed(0) + \"%\"}\n      </h1>\n    </div>\n    \n    </>\n  );\n\n  function harvestResource(harvestAmount) {\n\n    if(!canHarvest) return\n\n    updateMoney(harvestAmount)\n    setCurrentResources(currentResources-harvestAmount)\n    console.log(currentResources-harvestAmount)\n    if(currentResources<=1){\n    handleResourceDepleted()\n    }\n  }\n\n   function handleResourceDepleted() {\n      setCurrentResources(0)\n      setCanHarvest(false)\n      setTotalResources(totalResources*1.1)\n      setTimeout(() => {\n       setShouldReset(true)\n      },500)\n  }\n  \n  \n  \n}\n\n\n\n\n\n\n\nexport default Wallet;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAO,OAAO;AAAC;AAAA;AAE9D,SAASC,MAAM,OAAwD;EAAA;EAAA,IAAvD;IAAEC,WAAW;IAAEC,cAAc;IAAEC,eAAe;IAAEC;EAAI,CAAC;EACnE,MAAM,CAACC,cAAc,EAACC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,GAACK,cAAc,IAAE,EAAE,CAAC;EAC1E,MAAM,CAACK,gBAAgB,EAACC,mBAAmB,CAAC,GAAGX,QAAQ,CAACQ,cAAc,CAAC;EACvE,MAAM,CAACI,UAAU,EAACC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACjD,MAAM,CAACc,WAAW,EAACC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEpD,MAAMgB,UAAU,GAAGd,WAAW,CAAC,MAAM;IACnCe,eAAe,CAACV,GAAG,CAAC;EACtB,CAAC,EAAC,CAACU,eAAe,CAAC,CAAC;EAEpBhB,SAAS,CAAC,MAAM;IACd,IAAGa,WAAW,EAAE;MAChBH,mBAAmB,CAACH,cAAc,CAAC;MACnCK,aAAa,CAAC,IAAI,CAAC;MACnBE,cAAc,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACD,WAAW,EAACN,cAAc,CAAC,CAAC;EAEhCP,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCH,UAAU,EAAE;IACd,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAC,CAACF,UAAU,CAAC,CAAC;EAEf,oBACE;IAAA,uBACA;MAAK,SAAS,EAAC,aAAa;MAAA,wBAC5B;QACI,EAAE,EAAC,QAAQ;QACX,GAAG,EAAEK,OAAO,CAACC,GAAG,CAACC,UAAU,GAAGb,gBAAgB,GAAC,CAAC,GAAG,sBAAsB,GAAG,sBAAuB;QACnG,GAAG,EAAC,YAAY;QAChB,KAAK,EAAE;UAACc,KAAK,EAAG,GAAE,EAAE,IAAEd,gBAAgB,GAACF,cAAc,CAAC,GAAC,EAAG;QAAI;QAC7D;QAAA;QACD,OAAO,EAAE,MAAM;UACbS,eAAe,CAACX,eAAe,CAAC;QAClC;MAAE;QAAA;QAAA;QAAA;MAAA,QACG,eACP;QAAA,UACG,CAACI,gBAAgB,GAACF,cAAc,GAAC,GAAG,EAAEiB,OAAO,CAAC,CAAC,CAAC,GAAG;MAAG;QAAA;QAAA;QAAA;MAAA,QACpD;IAAA;MAAA;MAAA;MAAA;IAAA;EACD,iBAEH;EAGL,SAASR,eAAe,CAACS,aAAa,EAAE;IAEtC,IAAG,CAACd,UAAU,EAAE;IAEhBR,WAAW,CAACsB,aAAa,CAAC;IAC1Bf,mBAAmB,CAACD,gBAAgB,GAACgB,aAAa,CAAC;IACnDC,OAAO,CAACC,GAAG,CAAClB,gBAAgB,GAACgB,aAAa,CAAC;IAC3C,IAAGhB,gBAAgB,IAAE,CAAC,EAAC;MACvBmB,sBAAsB,EAAE;IACxB;EACF;EAEC,SAASA,sBAAsB,GAAG;IAC/BlB,mBAAmB,CAAC,CAAC,CAAC;IACtBE,aAAa,CAAC,KAAK,CAAC;IACpBJ,iBAAiB,CAACD,cAAc,GAAC,GAAG,CAAC;IACrCsB,UAAU,CAAC,MAAM;MAChBf,cAAc,CAAC,IAAI,CAAC;IACrB,CAAC,EAAC,GAAG,CAAC;EACV;AAIF;AAAC,GArEQZ,MAAM;AAAA,KAANA,MAAM;AA6Ef,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}